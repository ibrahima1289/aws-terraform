name: Destroy Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to be Destroyed'
        type: choice
        options:
          - dev
          - qa
          - prod
          - backend
        default: dev
        required: true

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: "${{ inputs.environment }}"
    steps:
      # Checkout main to GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
      
      # Displays checkout files in runner
      - name: Display Repo Files
        run: |
          pwd
          ls -altr /home/runner/work/aws-terraform/aws-terraform/${{ inputs.environment }}

      # Install the latest version Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Initialize load remote state
      - name: Terraform Init
        run: | 
          cd /home/runner/work/aws-terraform/aws-terraform/${{ inputs.environment }}
          terraform init -input=false
        #   terraform init -reconfigure -backend-config=settings/${{ inputs.environment }}/backend.conf

      # Check TF configuration files format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates execution plan
      - name: Terraform Plan
        run: |
            cd /home/runner/work/aws-terraform/aws-terraform/${{ inputs.environment }}
            terraform plan -destroy -out=${{ inputs.environment }}-destroy-tfplan
        continue-on-error: false

  terraform-destroy:
    name: "Destroy ${{ inputs.environment }} Environment"
    runs-on: ubuntu-latest
    environment: "${{ inputs.environment }}"
    needs: [terraform-plan]

    steps:
      # Checkout main 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      # Install Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Set AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Initialize load remote state
      - name: Terraform Init-Destroy
        run: | 
            cd /home/runner/work/aws-terraform/aws-terraform/${{ inputs.environment }}
            terraform init -input=false

      # Generates execution plan
      - name: Terraform Plan-Destroy
        run: |
            cd /home/runner/work/aws-terraform/aws-terraform/${{ inputs.environment }}
            terraform plan -destroy -out=${{ inputs.environment }}-destroy-tfplan
        continue-on-error: false

      # Provision Infrastructure
      - name: Terraform Destroy
        run: |
          cd /home/runner/work/aws-terraform/aws-terraform/${{ inputs.environment }}
          terraform apply -auto-approve "${{ inputs.environment }}-destroy-tfplan" 
