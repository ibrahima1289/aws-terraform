name: Provision Environment

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to be destroyed'
        type: choice
        options:
          - dev
          - qa
          - prod
          - backend
        default: backend
        required: true

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    environment: "${{ inputs.environment }}"
    steps:
      # Checkout main to GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      # Install the latest version Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Initialize load remote state
      - name: Terraform Init
        run: |
          cd aws-terraform/aws-terraform/${{ inputs.environment }} 
          terraform init -reconfigure -backend-config=settings/${{ inputs.environment }}/backend.conf

      # Check TF configuration files format
      - name: Terraform Format
        run: terraform fmt -check

      # Generates execution plan
      - name: Terraform Plan
        run: |
          cd aws-terraform/aws-terraform/${{ inputs.environment }}
          terraform plan -out=${{ inputs.environment }}-tfplan
        continue-on-error: true

  terraform-apply:
    name: "Provision ${{ inputs.environment }} Environment"
    runs-on: ubuntu-latest
    environment: "${{ inputs.environment }}"
    needs: [terraform-plan]

    steps:
      # Checkout main 
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main

      # Install Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Set AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Destroy
      - name: Terraform Destroy
        id: destroy
        run: |
          cd aws-terraform/aws-terraform/${{ inputs.environment }}
          terraform apply -auto-approve ${{ inputs.environment }}-tfplan 
